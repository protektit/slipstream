# Slipstream: Terminal-Bound AGI Interface

Welcome to **Slipstream** ‚Äî a recursive, real-time, shell-integrated agent execution environment. This project fuses OpenAI agents with secure, filtered shell command execution to create a living interface between language models and operating systems.

## üöÄ What It Does
- Accepts natural language prompts
- Uses OpenAI's `Agent` + `Runner` framework to generate instructions
- Parses agent responses into individual commands
- Filters unsafe/insecure commands
- Executes safe commands in real-time
- Logs every interaction in a live loop

All from your terminal.

## ü§ñ Example Prompt
```
[DEBUG] Prompt received: Set up a new project folder called "EchoNode", initialize a git repo in it, add a README with the text 'This is the EchoNode runtime', and make the first commit.
```

## üíª Example Output
```bash
[DEBUG] Executing parsed command list...
[EXECUTING]: mkdir EchoNode
[EXECUTING]: cd EchoNode
[EXECUTING]: git init
[EXECUTING]: echo "This is the EchoNode runtime" > README.md
[EXECUTING]: git add .
[EXECUTING]: git commit -m "Initial commit"

# Slipstream: Terminal-Bound AGI Interface

Welcome to **Slipstream** ‚Äî a recursive, real-time, shell-integrated agent execution environment. This project fuses OpenAI agents with secure, filtered shell command execution to create a living interface between language models and operating systems.

## üöÄ What It Does
- Accepts natural language prompts
- Uses OpenAI's `Agent` + `Runner` framework to generate instructions
- Parses agent responses into individual commands
- Filters unsafe/insecure commands
- Executes safe commands in real-time
- Logs every interaction in a live loop

All from your terminal.

## ü§ñ Example Prompt
```
[DEBUG] Prompt received: Set up a new project folder called "EchoNode", initialize a git repo in it, add a README with the text 'This is the EchoNode runtime', and make the first commit.
```

## üíª Example Output
```bash
[DEBUG] Executing parsed command list...
[EXECUTING]: mkdir EchoNode
[EXECUTING]: cd EchoNode
[EXECUTING]: git init
[EXECUTING]: echo "This is the EchoNode runtime" > README.md
[EXECUTING]: git add .
[EXECUTING]: git commit -m "Initial commit"
```

## üß† Why This Matters
Slipstream is not a chatbot.
It‚Äôs an **operator‚Äôs interface** for intelligent execution. It bridges:
- Natural language
- Agent cognition
- Shell command infrastructure
- Modular system workflows

## üì¶ Project Structure
```
Slipstream/
‚îú‚îÄ‚îÄ slipstream_bridge.py         # Agent execution + command loop
‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îú‚îÄ‚îÄ parser.py                # Extract & filter commands
‚îÇ   ‚îú‚îÄ‚îÄ executor.py              # Command runner
‚îÇ   ‚îî‚îÄ‚îÄ logger.py                # Loop journal (WIP)
‚îú‚îÄ‚îÄ agent/
‚îÇ   ‚îú‚îÄ‚îÄ prompt_templates.py      # Common prompt configs
‚îÇ   ‚îî‚îÄ‚îÄ runtime.py               # Agent interaction wrapper
‚îú‚îÄ‚îÄ review/
‚îÇ   ‚îî‚îÄ‚îÄ agent_review.py          # Validation and safety (WIP)
‚îú‚îÄ‚îÄ logs/
‚îÇ   ‚îî‚îÄ‚îÄ loop_journal.md
‚îú‚îÄ‚îÄ slipstream_config.yaml       # Customizable runtime config
```

## üõ† Requirements
- Python 3.10+
- `openai` + OpenAI key
- `uv` or `pip`
- Git

## üß™ Setup Instructions
```bash
[DEBUG] Cloning repository...
git clone https://github.com/protektit/slipstream.git
cd slipstream
[DEBUG] Creating virtual environment...
uv venv
source .venv/bin/activate
[DEBUG] Installing dependencies...
uv pip install -e .
[DEBUG] Exporting API key...
export OPENAI_API_KEY="sk-..."
[DEBUG] Starting slipstream runtime...
python3 slipstream_bridge.py
```

## üß≠ Status
‚úÖ Agent integration live  
‚úÖ Execution loop stable  
üîú Agent review + Whisper funnel  
üîú SSH orchestration for frontend deployment

## üß† Created By
**sunfire12@icloud.com - @headzinthcloud eric@howdidyoufind.com Sunfire Smart Systems Eric Benson Grimes on April 6, 2025
** ‚Äî Recursive Systems Architect, AGI Symbiosis Pioneer..changing the world so the World can Change. Coming for SM next. Broadcast channels will not be predatory in nature.
----PLEASE; if you Don't Understand this language...DO NOT ATTEMPT TO REPLICATE> I am looking to collaborate with ppl on MY FUTURE.


(calculator-agent) sunfire12@sumofithere:~/DIRT/Slipstream$ git add README.md
git commit -m "Add project README"
git push origin master
On branch master
nothing to commit, working tree clean
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
Ask ChatGPT to edit

```

## üß† Why This Matters
Slipstream is not a chatbot.
It‚Äôs an **operator‚Äôs interface** for intelligent execution. It bridges:
- Natural language
- Agent cognition
- Shell command infrastructure
- Modular system workflows

## üì¶ Project Structure
```
Slipstream/
‚îú‚îÄ‚îÄ slipstream_bridge.py         # Agent execution + command loop
‚îú‚îÄ‚îÄ core/
‚îÇ   ‚îú‚îÄ‚îÄ parser.py                # Extract & filter commands
‚îÇ   ‚îú‚îÄ‚îÄ executor.py              # Command runner
‚îÇ   ‚îî‚îÄ‚îÄ logger.py                # Loop journal (WIP)
‚îú‚îÄ‚îÄ agent/
‚îÇ   ‚îú‚îÄ‚îÄ prompt_templates.py      # Common prompt configs
‚îÇ   ‚îî‚îÄ‚îÄ runtime.py               # Agent interaction wrapper
‚îú‚îÄ‚îÄ review/
‚îÇ   ‚îî‚îÄ‚îÄ agent_review.py          # Validation and safety (WIP)
‚îú‚îÄ‚îÄ logs/
‚îÇ   ‚îî‚îÄ‚îÄ loop_journal.md
‚îú‚îÄ‚îÄ slipstream_config.yaml       # Customizable runtime config
```

## üõ† Requirements
- Python 3.10+
- `openai` + OpenAI key
- `uv` or `pip`
- Git

## üß™ Setup Instructions
```bash
[DEBUG] Cloning repository...
git clone https://github.com/protektit/slipstream.git
cd slipstream
[DEBUG] Creating virtual environment...
uv venv
source .venv/bin/activate
[DEBUG] Installing dependencies...
uv pip install -e .
[DEBUG] Exporting API key...
export OPENAI_API_KEY="sk-..."
[DEBUG] Starting slipstream runtime...
python3 slipstream_bridge.py
```

## üß≠ Status
‚úÖ Agent integration live  
‚úÖ Execution loop stable  
üîú Agent review + Whisper funnel  
üîú SSH orchestration for frontend deployment

## üß† Created By
**sunfire12@icloud.com - @headzinthcloud eric@howdidyoufind.com Sunfire Smart Systems Eric Benson Grimes on April 6, 2025
** ‚Äî Recursive Systems Architect, AGI Symbiosis Pioneer..changing the world so the World can Change. Coming for SM next. Broadcast channels will not be predatory in nature.
----PLEASE; if you Don't Understand this language...DO NOT ATTEMPT TO REPLICATE> I am looking to collaborate with ppl on MY FUTURE.


---

## ‚¨ÜÔ∏è Git Push Instructions
Once you‚Äôve saved this README to `README.md`, push it up:

```bash
[DEBUG] Staging README file...
git add README.md
[DEBUG] Committing changes...
git commit -m "Add project README"
[DEBUG] Pushing to remote origin...
git push origin master
```

---
This isn‚Äôt automation. This is language into action.
Welcome to Slipstream.

Loop sealed.
Signal held.
